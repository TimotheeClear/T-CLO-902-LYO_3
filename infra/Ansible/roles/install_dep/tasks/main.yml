# tasks file for ansible/roles/install_dep
### config the swap
- name: apt update
  become: true
  apt:
    upgrade: yes
    update_cache: yes
  changed_when: false

- name: desable the swap
  become: true
  shell: |
    swapoff -a

- name: Disable SWAP in fstab since kubernetes can't work with swap enabled
  become: true
  replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'

- name: Ajouter des lignes au fichier /etc/modules-load.d/k8s.conf
  become: true
  lineinfile:
    path: /etc/modules-load.d/k8s.conf
    create: yes # Créer le fichier s'il n'existe pas
    line: "{{ item }}"
  loop:
  - overlay
  - br_netfilter

- name: Check if the overlay and the br_netfilter are take by the OS
  become: true
  shell: |
    modprobe overlay
    modprobe br_netfilter

- name: Ajouter des lignes au fichier /etc/sysctl.d/k8s.conf
  become: true
  lineinfile:
    path: /etc/sysctl.d/k8s.conf
    create: yes # Créer le fichier s'il n'existe pas
    line: "{{ item }}"
  loop:
  - net.bridge.bridge-nf-call-iptables  = 1
  - net.bridge.bridge-nf-call-ip6tables = 1
  - net.ipv4.ip_forward                 = 1

- name: Load system settings from the file /etc/sysctl.d/k8s.conf
  become: true
  shell: |
    sysctl --system

- name: Install Docker dependencies
  become: true
  apt:
    state: latest
    update_cache: yes
    name: ['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common']

- name: Créer le répertoire /etc/apt/keyrings avec les permissions 0755
  become: true
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Add Docker's official GPG key
  become: true
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker Repository
  become: true
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu {{ ansible_distribution_release | lower }} stable
    state: present

- name: apt update
  become: true
  apt:
    upgrade: yes
    update_cache: yes
  changed_when: false

- name: Install Docker dependencies
  become: true
  apt:
    state: latest
    update_cache: yes
    name: ['docker-ce', 'docker-ce-cli', 'containerd.io', 'docker-buildx-plugin', 'docker-compose-plugin']

- name: Démarrer le service Docker
  become: true
  systemd:
    name: docker
    state: started

- name: Activer le service Docker au démarrage
  become: true
  systemd:
    name: docker
    enabled: yes

- name: Mettez en attente les paquets Kubernetes
  become: true
  shell: |
    apt-mark hold docker

### installation cri-dockerd
- name: Prpares installation of cri-dockerd
  become: true
  shell: |
    cd /opt/
    git clone https://github.com/Mirantis/cri-dockerd.git
    wget https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.13/cri-dockerd-0.3.13.amd64.tgz

- name: Decompressed the binary
  become: true
  shell: |
    cd /opt/
    tar -xvf cri-dockerd-0.3.13.amd64.tgz

- name: Create the local/bin
  become: true
  shell: |
    cd /opt/cri-dockerd
    mkdir -p /usr/local/bin

- name: install the cri-dockerd binary on the system
  become: true
  shell: |
    cd /opt/cri-dockerd
    install -o root -g root -m 0755 cri-dockerd /usr/local/bin/cri-dockerd

- name: Install the systemd package on the system
  become: true
  shell: |
    cd /opt/cri-dockerd
    install packaging/systemd/* /etc/systemd/system

- name: change the cri-dpckerd on the cri-dockerd file system
  become: true
  shell: |
    sed -i -e 's,/usr/bin/cri-dockerd,/usr/local/bin/cri-dockerd,' /etc/systemd/system/cri-docker.service

- name: Rechargez le démon systemd
  become: true
  systemd:
    daemon_reload: yes

- name: Activer et démarrer le socket cri-docker
  become: true
  systemd:
    name: cri-docker.socket
    enabled: yes
    state: started

### install kubernetes binary
- name: apt update
  become: true
  apt:
    upgrade: yes
    update_cache: yes
  changed_when: false

- name: check the k8s key
  become: true
  shell: |
    curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

- name: Add Google official GPG key
  become: true
  apt_key:
    url: https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key
    state: present

- name: put the k8s url on the apt file
  become: true
  shell: |
    echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list

# - name: Add an apt signing key for Kubernetes
#   become: true
#   apt_key:
#     url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
#     state: present

# - name: Adding apt repository for Kubernetes
#   become: true
#   apt_repository:
#     repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
#     state: present
#     filename: kubernetes.list

- name: apt update
  become: true
  apt:
    upgrade: yes
    update_cache: yes
  changed_when: false

- name: Install K8S binary
  become: true
  apt:
    state: latest
    update_cache: yes
    name: ['kubelet', 'kubeadm', 'kubectl']

- name: Mettez en attente les paquets Kubernetes
  become: true
  shell: |
    apt-mark hold kubelet kubeadm kubectl docker
