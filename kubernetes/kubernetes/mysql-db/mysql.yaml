---
apiVersion: v1
kind: Namespace
metadata:
  name: mysql-namespace 
  labels:
    kubequest: mysql-db
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service 
  namespace: mysql-namespace
  labels:
    kubequest: mysql-db
spec:
  type: ClusterIP
  selector:
    app: mysql 
  ports:
    - name: mysql-port
      port: 3306
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployement
  namespace: mysql-namespace
  labels:
    kubequest: mysql-db
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - image: mysql:8.4.0
        name: mysql-pod 
        env:
        # Use secret in real usage
        - name: MYSQL_ROOT_PASSWORD
          value: app_root_password
        - name: MYSQL_DATABASE
          value: app_database
        - name: MYSQL_USER
          value: app_user
        - name: MYSQL_PASSWORD
          value: app_password
        ports:
        - containerPort: 3306
          name: app-db-port
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
        # resources:
        #   requests:
        #     cpu: 3
        #     memory: 1Gi
        #   limits:
        #     cpu: 4
        #     memory: 2Gi
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
  namespace: mysql-namespace
  labels:
    kubequest: mysql-db
spec:
  storageClassName: manual
  accessModes: 
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv-volume
  namespace: mysql-namespace
  labels:
    kubequest: mysql-db
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 20Gi
  accessModes: 
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"